{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue-Bold;\f1\fnil\fcharset0 HelveticaNeue;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red50\green98\blue178;\red0\green0\blue0;
\red245\green245\blue245;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl600\sa320\partightenfactor0

\f0\b\fs48 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 hw0, Minutes of Action. Due: soon (5 days after your linux accounts are available to you).\
\pard\pardeftab720\sl480\sa320\partightenfactor0

\f1\b0\fs32 \cf2 (For example, if you are notified on class on the 10th of the month that the linux accounts are ready and given information about how to login, then the assignment is due on the 15th).\
--update: Accounts information will be given Today (Thursday 9/1) during class.\
You will create a C++ program that will count the total of minutes, hours, and days mentioned inside of a plain-text file.\
\pard\pardeftab720\sl360\partightenfactor0

\f0\b\fs36 \cf3 \strokec3 \
\pard\pardeftab720\sl440\sa320\partightenfactor0
\cf2 \strokec2 Input\
\pard\pardeftab720\sl480\sa320\partightenfactor0

\f1\b0\fs32 \cf2 The input is a plain-text file, where each line is terminated with an end-of-line character. Each line will have words or numbers. To simplify we will assume that there will not be words containing numbers such as the word: car4sale. (Or numbers containg letters such as 22E01). A word is a string of letters (upper and lower case). Lines in the input file that start with the symbol 
\f2\fs28 \cb4 #
\f1\fs32 \cb1  should be considered comments and therefore skipped.\
Example 1:\
\pard\pardeftab720\sl380\partightenfactor0

\f2\fs28 \cf2 \cb5 A person of interest travels 20 minutes each day.\
Meredith travels 1 hour by train to visit Derek. However, Derek can visit her in one minute.\
#this line is a comment because it starts with #\
#for example, this comment line contains 1000 minutes but they do not get added anywhere\
Cristina does 4 minutes of yoga on her lunch break; she's done that in the last 3 weeks. \
She can drink 3 minutemaid bottles a day.\
\pard\pardeftab720\sl480\sa320\partightenfactor0

\f1\fs32 \cf2 \cb1 Each line that is not a comment will be processed to find references of minutes, hours, or days. Such items will be appear first as a number and then one of these words: minute, minutes, hour, hours, day, days. There may be empty lines in the input file. The words and numbers may be separated by spaces, commas, period, new-line character, parenthesis, etc. Words and numbers will be separated by at least one non-letter or non-digit symbol. A word is one or more consecutive letters until a non-letter is next. You can assume that a word will be at most 30 characters long (always letters). Numbers are always digits (0,1,2,...,9). Numbers will have maximum of 10 digits. There may be things that look like a number but are not, such as: 1024K.\
\pard\pardeftab720\sl360\partightenfactor0

\f0\b\fs36 \cf3 \strokec3 \
\pard\pardeftab720\sl440\sa320\partightenfactor0
\cf2 \strokec2 Program specification\
\pard\pardeftab720\sl480\sa320\partightenfactor0

\f1\b0\fs32 \cf2 The main program should be called 
\f2\fs28 \cb4 uhday
\f1\fs32 \cb1  and the syntax in which it will be tested is as follows:\
\pard\pardeftab720\sl480\sa320\partightenfactor0

\f2\fs28 \cf2 \cb4 uhday "input=FILENAME"
\f1\fs32 \cb1 \
The parameter 
\f2\fs28 \cb4 input
\f1\fs32 \cb1  specifies the name of the input file.\
Example of program calls:\

\f2\fs28 \cb4 uhday "input=gray.txt"
\f1\fs32 \cb1 \
or, 
\f2\fs28 \cb4 ./uhday "input=gray.txt"
\f1\fs32 \cb1 \
The source code will be compiled as follows:\

\f2\fs28 \cb4 g++ -std=c++11 -o uhday -I ./ *.cpp
\f1\fs32 \cb1 \
\pard\pardeftab720\sl360\partightenfactor0

\f0\b\fs36 \cf3 \strokec3 \
\pard\pardeftab720\sl440\sa320\partightenfactor0
\cf2 \strokec2 Output\
\pard\pardeftab720\sl480\sa320\partightenfactor0

\f1\b0\fs32 \cf2 Your program will output to the console (such as via cout, or printf) with the results of counting, independently, the minutes, hours, and days metioned in the file. Your program must follow the output format exactly to facilitate automated grading (and to avoid failing test cases due to things such as output of an empty line at the end).\
Output for the input example.\
\pard\pardeftab720\sl380\partightenfactor0

\f2\fs28 \cf2 \cb5 Minutes:24\
Hours:1\
Days:0\
\pard\pardeftab720\sl360\partightenfactor0

\f0\b\fs36 \cf3 \cb1 \strokec3 \
\pard\pardeftab720\sl440\sa320\partightenfactor0
\cf2 \strokec2 Assumptions\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls1\ilvl0
\f1\b0\fs32 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 The input file can fit in main maimory (not larger than 10kb).\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 The words "Minutes", "Hours", "Days" in the output will be exactly like that. They are expected to always be in plural.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 You can assume that it is safe to treat each line independently. There will not be test cases such as line 1 ending in a number, and line 2 starting with: day.\
\pard\pardeftab720\sl360\partightenfactor0

\f0\b\fs36 \cf3 \strokec3 \
\pard\pardeftab720\sl440\sa320\partightenfactor0
\cf2 \strokec2 Requirements\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls2\ilvl0
\f1\b0\fs32 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 This assignment is pass/fail. If your program scores more than 60 points, then you will pass.\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Place your codes in a folder named: 
\f2\fs28 \cb4 hw0
\f1\fs32 \cb1  (Failure to do so will cause your program to have a zero grade due to inability for doing automated grading).\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Your program should not produce any unexpected output when it is doing intermediate calculations because doing so will interfere with automated grading and some test cases will fail.\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 You can not assume a maximum number of lines in the input file.\
}